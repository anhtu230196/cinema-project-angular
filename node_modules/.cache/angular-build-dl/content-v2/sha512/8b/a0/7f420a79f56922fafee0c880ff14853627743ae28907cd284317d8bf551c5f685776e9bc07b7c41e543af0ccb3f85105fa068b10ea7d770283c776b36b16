{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","routes","path","loadChildren","m","AdminModule","MainModule","AppModule","forRoot","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'fe47-angular';\n}\n","<!-- <h1>Hello angular</h1> -->\n\n<!-- <app-demo></app-demo> -->\n\n<!-- <button class=\"btn btn-success\">Click</button>\n<app-baitap1></app-baitap1> -->\n<!-- <app-baitap2></app-baitap2> -->\n\n<!-- <app-structural-directives></app-structural-directives> -->\n\n<!-- <app-attribute-directives></app-attribute-directives> -->\n<!-- <app-baitap6></app-baitap6> -->\n\n<!-- <app-interaction></app-interaction> -->\n\n<!-- <app-baitap8></app-baitap8> -->\n\n<router-outlet></router-outlet>\n\n\n\n\n\n\n\n\n\n\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from \"./app.component\";\n// Có nhiều loại module\n// Module do angular cung cấp: FormsModule, RouterModule, HttpModule\n// Module do dev tự định nghĩa\n\nimport { SlickCarouselModule } from \"ngx-slick-carousel\";\n\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [\n  {\n    path: \"admin\",\n    loadChildren: () =>\n      import(\"./admin/admin.module\").then((m) => m.AdminModule),\n  },\n  {\n    path: \"\",\n    loadChildren: () => import(\"./main/main.module\").then((m) => m.MainModule),\n  },\n];\n\n@NgModule({\n  // Khai báo component sẽ được module quản lý\n  declarations: [AppComponent],\n  // Khai báo các module sẽ được sử dụng\n  // Ngoại trừ AppModule đã được import ở main.ts\n  // Tất cả các module khác đều phải được import mới sử dụng được\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    FormsModule,\n    HttpClientModule,\n    SlickCarouselModule,\n  ],\n  // Nơi gắn các services vào\n  providers: [],\n  // Khai báo để AppComponent là component chạy đầu tiên của module\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\n\n\n\n\n\n"]}